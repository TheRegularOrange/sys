To implement database connectivity and perform basic database navigation operations (add, delete, and edit) with MySQL or Oracle using PHP, Python, and Java, here are examples for each language.

### 1. **MySQL/Oracle Database Connectivity with PHP**

#### For **MySQL**:
You need to use the `mysqli` or `PDO` extension in PHP to connect to a MySQL database.

**PHP Code with MySQL using `mysqli` extension:**

```php
<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "test_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Add a record (INSERT)
$sql = "INSERT INTO users (name, age, email) VALUES ('John Doe', 30, 'johndoe@example.com')";
if ($conn->query($sql) === TRUE) {
    echo "New record created successfully\n";
} else {
    echo "Error: " . $sql . "<br>" . $conn->error;
}

// Edit a record (UPDATE)
$sql = "UPDATE users SET age = 31 WHERE name = 'John Doe'";
if ($conn->query($sql) === TRUE) {
    echo "Record updated successfully\n";
} else {
    echo "Error: " . $conn->error . "\n";
}

// Delete a record (DELETE)
$sql = "DELETE FROM users WHERE name = 'John Doe'";
if ($conn->query($sql) === TRUE) {
    echo "Record deleted successfully\n";
} else {
    echo "Error: " . $conn->error . "\n";
}

$conn->close();
?>
```

#### For **Oracle**:
You can use the `oci8` extension to connect to Oracle databases.

**PHP Code with Oracle (OCI8) extension:**

```php
<?php
$conn = oci_connect('username', 'password', 'localhost/XE');

if (!$conn) {
    $e = oci_error();
    echo "Connection failed: " . $e['message'];
    exit;
}

// Add a record (INSERT)
$query = "INSERT INTO users (name, age, email) VALUES ('Alice Smith', 25, 'alicesmith@example.com')";
$stid = oci_parse($conn, $query);
oci_execute($stid);
echo "Record added successfully\n";

// Edit a record (UPDATE)
$query = "UPDATE users SET age = 26 WHERE name = 'Alice Smith'";
$stid = oci_parse($conn, $query);
oci_execute($stid);
echo "Record updated successfully\n";

// Delete a record (DELETE)
$query = "DELETE FROM users WHERE name = 'Alice Smith'";
$stid = oci_parse($conn, $query);
oci_execute($stid);
echo "Record deleted successfully\n";

oci_close($conn);
?>
```

### 2. **MySQL/Oracle Database Connectivity with Python**

#### For **MySQL**:
You need the `mysql-connector-python` library.

```bash
pip install mysql-connector-python
```

**Python Code with MySQL:**

```python
import mysql.connector

# Connect to MySQL
conn = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="test_db"
)

cursor = conn.cursor()

# Add a record (INSERT)
cursor.execute("INSERT INTO users (name, age, email) VALUES ('Jane Doe', 28, 'janedoe@example.com')")
conn.commit()
print("Record added successfully")

# Edit a record (UPDATE)
cursor.execute("UPDATE users SET age = 29 WHERE name = 'Jane Doe'")
conn.commit()
print("Record updated successfully")

# Delete a record (DELETE)
cursor.execute("DELETE FROM users WHERE name = 'Jane Doe'")
conn.commit()
print("Record deleted successfully")

# Close connection
cursor.close()
conn.close()
```

#### For **Oracle**:
You need the `cx_Oracle` library.

```bash
pip install cx_Oracle
```

**Python Code with Oracle:**

```python
import cx_Oracle

# Connect to Oracle
conn = cx_Oracle.connect('username', 'password', 'localhost/XE')
cursor = conn.cursor()

# Add a record (INSERT)
cursor.execute("INSERT INTO users (name, age, email) VALUES ('Bob Lee', 32, 'boble@example.com')")
conn.commit()
print("Record added successfully")

# Edit a record (UPDATE)
cursor.execute("UPDATE users SET age = 33 WHERE name = 'Bob Lee'")
conn.commit()
print("Record updated successfully")

# Delete a record (DELETE)
cursor.execute("DELETE FROM users WHERE name = 'Bob Lee'")
conn.commit()
print("Record deleted successfully")

# Close connection
cursor.close()
conn.close()
```

### 3. **MySQL/Oracle Database Connectivity with Java**

#### For **MySQL**:
You need to include the MySQL JDBC driver in your project. If you're using Maven, add this dependency:

```xml
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>8.0.23</version>
</dependency>
```

**Java Code with MySQL:**

```java
import java.sql.*;

public class MySQLExample {
    public static void main(String[] args) {
        try {
            // Connect to MySQL
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/test_db", "root", "");

            // Add a record (INSERT)
            String insertQuery = "INSERT INTO users (name, age, email) VALUES ('Tom Hanks', 64, 'tomhanks@example.com')";
            Statement stmt = conn.createStatement();
            stmt.executeUpdate(insertQuery);
            System.out.println("Record added successfully");

            // Edit a record (UPDATE)
            String updateQuery = "UPDATE users SET age = 65 WHERE name = 'Tom Hanks'";
            stmt.executeUpdate(updateQuery);
            System.out.println("Record updated successfully");

            // Delete a record (DELETE)
            String deleteQuery = "DELETE FROM users WHERE name = 'Tom Hanks'";
            stmt.executeUpdate(deleteQuery);
            System.out.println("Record deleted successfully");

            // Close connection
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
```

#### For **Oracle**:
You need the Oracle JDBC driver (`ojdbc8.jar`). Include it in your project.

**Java Code with Oracle:**

```java
import java.sql.*;

public class OracleExample {
    public static void main(String[] args) {
        try {
            // Connect to Oracle
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "username", "password");

            // Add a record (INSERT)
            String insertQuery = "INSERT INTO users (name, age, email) VALUES ('Emily Rose', 30, 'emilyrose@example.com')";
            Statement stmt = conn.createStatement();
            stmt.executeUpdate(insertQuery);
            System.out.println("Record added successfully");

            // Edit a record (UPDATE)
            String updateQuery = "UPDATE users SET age = 31 WHERE name = 'Emily Rose'";
            stmt.executeUpdate(updateQuery);
            System.out.println("Record updated successfully");

            // Delete a record (DELETE)
            String deleteQuery = "DELETE FROM users WHERE name = 'Emily Rose'";
            stmt.executeUpdate(deleteQuery);
            System.out.println("Record deleted successfully");

            // Close connection
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
```

### Conclusion

These examples cover basic MySQL/Oracle database connectivity and CRUD operations (add, edit, delete) in PHP, Python, and Java.

- **PHP** uses `mysqli` for MySQL or `oci8` for Oracle.
- **Python** uses `mysql-connector-python` for MySQL or `cx_Oracle` for Oracle.
- **Java** uses JDBC for MySQL and Oracle.

Make sure you have the necessary drivers installed and the database set up before running these examples.